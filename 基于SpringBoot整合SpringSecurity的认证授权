<!DOCTYPE html><html lang="zh-CN"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=2"><meta name="theme-color" content="#FFF"><link rel="apple-touch-icon" sizes="180x180" href="/mb-blog/images/apple-touch-icon.png"><link rel="icon" type="image/ico" sizes="32x32" href="/mb-blog/images/favicon.ico"><link rel="mask-icon" href="/mb-blog/images/logo.svg" color=""><link rel="manifest" href="/mb-blog/images/manifest.json"><meta name="msapplication-config" content="/mb-blog/images/browserconfig.xml"><meta http-equiv="Cache-Control" content="no-transform"><meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" type="application/rss+xml" title="星辰驿站" href="https://zhai-xing.github.io/mb-blog/rss.xml"><link rel="alternate" type="application/atom+xml" title="星辰驿站" href="https://zhai-xing.github.io/mb-blog/atom.xml"><link rel="alternate" type="application/json" title="星辰驿站" href="https://zhai-xing.github.io/mb-blog/feed.json"><link rel="stylesheet" href="//fonts.googleapis.com/css?family=Mulish:300,300italic,400,400italic,700,700italic%7CFredericka%20the%20Great:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20JP:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20SC:300,300italic,400,400italic,700,700italic%7CInconsolata:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext"><link rel="stylesheet" href="/mb-blog/css/app.css?v=0.2.5"><meta name="keywords" content="SpringBoot,权限,SpringSecurity"><link rel="canonical" href="https://zhai-xing.github.io/mb-blog/%E5%9F%BA%E4%BA%8ESpringBoot%E6%95%B4%E5%90%88SpringSecurity%E7%9A%84%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83"><title>基于SpringBoot整合SpringSecurity的认证授权 - java | Pick stars = 星辰驿站 = =别怕路长梦远，总有星河照耀=</title><meta name="generator" content="Hexo 6.3.0"></head><body itemscope itemtype="http://schema.org/WebPage"><div id="loading"><div class="cat"><div class="body"></div><div class="head"><div class="face"></div></div><div class="foot"><div class="tummy-end"></div><div class="bottom"></div><div class="legs left"></div><div class="legs right"></div></div><div class="paw"><div class="hands left"></div><div class="hands right"></div></div></div></div><div id="container"><header id="header" itemscope itemtype="http://schema.org/WPHeader"><div class="inner"><div id="brand"><div class="pjax"><h1 itemprop="name headline">基于SpringBoot整合SpringSecurity的认证授权</h1><div class="meta"><span class="item" title="创建时间：2022-12-04 23:40:42"><span class="icon"><i class="ic i-calendar"></i> </span><span class="text">发表于</span> <time itemprop="dateCreated datePublished" datetime="2022-12-04T23:40:42+08:00">2022-12-04</time> </span><span class="item" title="本文字数"><span class="icon"><i class="ic i-pen"></i> </span><span class="text">本文字数</span> <span>9.7k</span> <span class="text">字</span> </span><span class="item" title="阅读时长"><span class="icon"><i class="ic i-clock"></i> </span><span class="text">阅读时长</span> <span>9 分钟</span></span></div></div></div><nav id="nav"><div class="inner"><div class="toggle"><div class="lines" aria-label="切换导航栏"><span class="line"></span> <span class="line"></span> <span class="line"></span></div></div><ul class="menu"><li class="item title"><a href="/mb-blog/" rel="start">Pick stars</a></li></ul><ul class="right"><li class="item theme"><i class="ic i-sun"></i></li><li class="item search"><i class="ic i-search"></i></li></ul></div></nav></div><div id="imgs" class="pjax"><img src="https://blog-1259743669.cos.ap-chengdu.myqcloud.com/81d1da7e1ba142629967fea196c73e0e.jpg"></div></header><div id="waves"><svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"/></defs><g class="parallax"><use xlink:href="#gentle-wave" x="48" y="0"/><use xlink:href="#gentle-wave" x="48" y="3"/><use xlink:href="#gentle-wave" x="48" y="5"/><use xlink:href="#gentle-wave" x="48" y="7"/></g></svg></div><main><div class="inner"><div id="main" class="pjax"><div class="article wrap"><div class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList"><i class="ic i-home"></i> <span><a href="/mb-blog/">首页</a></span><i class="ic i-angle-right"></i> <span class="current" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/mb-blog/categories/java/" itemprop="item" rel="index" title="分类于 java"><span itemprop="name">java</span></a><meta itemprop="position" content="1"></span></div><article itemscope itemtype="http://schema.org/Article" class="post block" lang="zh-CN"><link itemprop="mainEntityOfPage" href="https://zhai-xing.github.io/mb-blog/%E5%9F%BA%E4%BA%8ESpringBoot%E6%95%B4%E5%90%88SpringSecurity%E7%9A%84%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83"><span hidden itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="image" content="/mb-blog/images/avatar.jpg"><meta itemprop="name" content="摘星"><meta itemprop="description" content="=别怕路长梦远，总有星河照耀=, 欢迎来到摘星的小破站，这里你可以阅读我的学习笔记并提出独到的见解~我们将互相学习交流知识，共同进步"></span><span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization"><meta itemprop="name" content="星辰驿站"></span><div class="body md" itemprop="articleBody"><p>之前一直是使用的 Shiro，最近因为公司使用若依的前后端分离版本中，认证授权模块是使用的 SpringSecurity，所以就打算写一遍这个教程了。嗯在这之前一直是使用 Shiro 做授权和认证的。嗯后面会讲的，在这之前读者需要具有 SpringBoot 基础、以及能够使用 SpringBoot 连接数据库进行操作，</p><p>前后端分离部分在这里<br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OS9hcnRpY2xlL2RldGFpbHMvMTE5MzU4NjQx">SpringSecurity+Jwt 做前后端分离权限认证</span></p><p><em><strong>源码下载链接在文末</strong></em></p><p>先来说说 RBAC 模型</p><h4 id="什么是rbac"><a class="anchor" href="#什么是rbac">#</a> 什么是 RBAC</h4><p>RBAC（全称：Role-Based Access Control）基于角色的权限访问控制，作为传统访问控制（自主访问，强制访问）的有前景的代替受到广泛的关注。在 RBAC 中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限。这就极大地简化了权限的管理。</p><p>在一个组织中，角色是为了完成各种工作而创造，用户则依据它的责任和资格来被指派相应的角色，用户可以很容易地从一个角色被指派到另一个角色。角色可依新的需求和系统的合并而赋予新的权限，而权限也可根据需要而从某角色中回收。角色与角色的关系可以建立起来以囊括更广泛的客观<br>情况。</p><p>访问控制是针对越权使用资源的防御措施，目的是为了限制访问主体（如用户等） 对访问客体（如数据库资源等）的访问权限。企业环境中的访问控制策略大部分都采用基于角色的访问控制（RBAC）模型，是目前公认的解决大型企业的统一资源访问控制的有效方法</p><h4 id="本案例的rbac的设计思路"><a class="anchor" href="#本案例的rbac的设计思路">#</a> 本案例的 RBAC 的设计思路</h4><p>基于角色的访问控制基本原理是在用户和访问权限之间加入角色这一层，实现用户和权限的分离，用户只有通过激活角色才能获得访问权限。通过角色对权限分组，大大简化了用户权限分配表，间接地实现了对用户的分组，提高了权限的分配效率。且加入角色层后，访问控制机制更接近真实世界中的职业分配，便于权限管理。<br><img data-src="https://img-blog.csdnimg.cn/20210718144656832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下面我们开始</p><h4 id="一-数据库建表"><a class="anchor" href="#一-数据库建表">#</a> 一、数据库建表</h4><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>SET NAMES utf8mb4<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>SET FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token operator">--</span> Table structure <span class="token keyword">for</span> permission</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="7"></td><td><pre>DROP TABLE IF EXISTS `permission`<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>CREATE TABLE `permission`  <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  `pid` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> NOT <span class="token constant">NULL</span> AUTO_INCREMENT COMMENT <span class="token char">'id'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  `permission_name` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> CHARACTER SET utf8 COLLATE utf8_general_ci <span class="token constant">NULL</span> DEFAULT <span class="token constant">NULL</span> COMMENT <span class="token char">'资源名称'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  `str` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> CHARACTER SET utf8 COLLATE utf8_general_ci <span class="token constant">NULL</span> DEFAULT <span class="token constant">NULL</span> COMMENT <span class="token char">'资源标识符'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  PRIMARY <span class="token function">KEY</span> <span class="token punctuation">(</span>`pid`<span class="token punctuation">)</span> USING BTREE</pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token punctuation">)</span> ENGINE <span class="token operator">=</span> InnoDB AUTO_INCREMENT <span class="token operator">=</span> <span class="token number">3</span> CHARACTER SET <span class="token operator">=</span> utf8 COLLATE <span class="token operator">=</span> utf8_general_ci ROW_FORMAT <span class="token operator">=</span> Dynamic<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token operator">--</span> Records of permission</pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="18"></td><td><pre>INSERT INTO `permission` <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token char">'用户删除'</span><span class="token punctuation">,</span> <span class="token char">'sys:user:delete'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token operator">--</span> Table structure <span class="token keyword">for</span> role</pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="23"></td><td><pre>DROP TABLE IF EXISTS `role`<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>CREATE TABLE `role`  <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="25"></td><td><pre>  `rid` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> NOT <span class="token constant">NULL</span> AUTO_INCREMENT COMMENT <span class="token char">'id'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="26"></td><td><pre>  `role_name` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> CHARACTER SET utf8 COLLATE utf8_general_ci <span class="token constant">NULL</span> DEFAULT <span class="token constant">NULL</span> COMMENT <span class="token char">'角色名称'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre>  PRIMARY <span class="token function">KEY</span> <span class="token punctuation">(</span>`rid`<span class="token punctuation">)</span> USING BTREE</pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token punctuation">)</span> ENGINE <span class="token operator">=</span> InnoDB AUTO_INCREMENT <span class="token operator">=</span> <span class="token number">4</span> CHARACTER SET <span class="token operator">=</span> utf8 COLLATE <span class="token operator">=</span> utf8_general_ci ROW_FORMAT <span class="token operator">=</span> Dynamic<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token operator">--</span> Records of role</pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="33"></td><td><pre>INSERT INTO `role` <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token char">'ROLE_admin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>INSERT INTO `role` <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token char">'ROLE_root'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>INSERT INTO `role` <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token char">'ROLE_test'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token operator">--</span> Table structure <span class="token keyword">for</span> role_permission</pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="40"></td><td><pre>DROP TABLE IF EXISTS `role_permission`<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>CREATE TABLE `role_permission`  <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="42"></td><td><pre>  `id` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> NOT <span class="token constant">NULL</span> AUTO_INCREMENT COMMENT <span class="token char">'id'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre>  `rid` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token constant">NULL</span> DEFAULT <span class="token constant">NULL</span> COMMENT <span class="token char">'角色id'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="44"></td><td><pre>  `pid` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token constant">NULL</span> DEFAULT <span class="token constant">NULL</span> COMMENT <span class="token char">'权限id'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="45"></td><td><pre>  PRIMARY <span class="token function">KEY</span> <span class="token punctuation">(</span>`id`<span class="token punctuation">)</span> USING BTREE<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="46"></td><td><pre>  INDEX `fk_rid2`<span class="token punctuation">(</span>`rid`<span class="token punctuation">)</span> USING BTREE<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre>  INDEX `fk_pid2`<span class="token punctuation">(</span>`pid`<span class="token punctuation">)</span> USING BTREE</pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token punctuation">)</span> ENGINE <span class="token operator">=</span> InnoDB AUTO_INCREMENT <span class="token operator">=</span> <span class="token number">2</span> CHARACTER SET <span class="token operator">=</span> utf8 COLLATE <span class="token operator">=</span> utf8_general_ci ROW_FORMAT <span class="token operator">=</span> Dynamic<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token operator">--</span> Records of role_permission</pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="53"></td><td><pre>INSERT INTO `role_permission` <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token operator">--</span> Table structure <span class="token keyword">for</span> user</pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="58"></td><td><pre>DROP TABLE IF EXISTS `user`<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>CREATE TABLE `user`  <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="60"></td><td><pre>  `uid` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> NOT <span class="token constant">NULL</span> AUTO_INCREMENT COMMENT <span class="token char">'账户id'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="61"></td><td><pre>  `user_name` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> CHARACTER SET utf8 COLLATE utf8_general_ci <span class="token constant">NULL</span> DEFAULT <span class="token constant">NULL</span> COMMENT <span class="token char">'姓名'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="62"></td><td><pre>  `password` <span class="token function">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> CHARACTER SET utf8 COLLATE utf8_general_ci <span class="token constant">NULL</span> DEFAULT <span class="token constant">NULL</span> COMMENT <span class="token char">'密码'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="63"></td><td><pre>  `lock` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token constant">NULL</span> DEFAULT <span class="token number">0</span> COMMENT <span class="token char">'是否可用 1可用 0不可用'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="64"></td><td><pre>  PRIMARY <span class="token function">KEY</span> <span class="token punctuation">(</span>`uid`<span class="token punctuation">)</span> USING BTREE</pre></td></tr><tr><td data-num="65"></td><td><pre><span class="token punctuation">)</span> ENGINE <span class="token operator">=</span> InnoDB AUTO_INCREMENT <span class="token operator">=</span> <span class="token number">7</span> CHARACTER SET <span class="token operator">=</span> utf8 COLLATE <span class="token operator">=</span> utf8_general_ci ROW_FORMAT <span class="token operator">=</span> Dynamic<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token operator">--</span> Records of user</pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="70"></td><td><pre>INSERT INTO `user` <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token char">'zx'</span><span class="token punctuation">,</span> <span class="token char">'123456'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>INSERT INTO `user` <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token char">'te'</span><span class="token punctuation">,</span> <span class="token char">'123'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre></pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token operator">--</span> Table structure <span class="token keyword">for</span> user_role</pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="76"></td><td><pre>DROP TABLE IF EXISTS `user_role`<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>CREATE TABLE `user_role`  <span class="token punctuation">(</span></pre></td></tr><tr><td data-num="78"></td><td><pre>  `id` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT <span class="token constant">NULL</span> AUTO_INCREMENT COMMENT <span class="token char">'id'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="79"></td><td><pre>  `uid` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token constant">NULL</span> DEFAULT <span class="token constant">NULL</span> COMMENT <span class="token char">'用户id'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="80"></td><td><pre>  `rid` <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token constant">NULL</span> DEFAULT <span class="token constant">NULL</span> COMMENT <span class="token char">'角色id'</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="81"></td><td><pre>  PRIMARY <span class="token function">KEY</span> <span class="token punctuation">(</span>`id`<span class="token punctuation">)</span> USING BTREE<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="82"></td><td><pre>  INDEX `fk_uid`<span class="token punctuation">(</span>`uid`<span class="token punctuation">)</span> USING BTREE<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="83"></td><td><pre>  INDEX `fk_rid`<span class="token punctuation">(</span>`rid`<span class="token punctuation">)</span> USING BTREE</pre></td></tr><tr><td data-num="84"></td><td><pre><span class="token punctuation">)</span> ENGINE <span class="token operator">=</span> InnoDB AUTO_INCREMENT <span class="token operator">=</span> <span class="token number">3</span> CHARACTER SET <span class="token operator">=</span> utf8 COLLATE <span class="token operator">=</span> utf8_general_ci ROW_FORMAT <span class="token operator">=</span> Dynamic<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="85"></td><td><pre></pre></td></tr><tr><td data-num="86"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="87"></td><td><pre><span class="token operator">--</span> Records of user_role</pre></td></tr><tr><td data-num="88"></td><td><pre><span class="token operator">--</span> <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span></pre></td></tr><tr><td data-num="89"></td><td><pre>INSERT INTO `user_role` <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>INSERT INTO `user_role` <span class="token function">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="91"></td><td><pre></pre></td></tr><tr><td data-num="92"></td><td><pre>SET FOREIGN_KEY_CHECKS <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></pre></td></tr></table></figure><h4 id="表结构分析"><a class="anchor" href="#表结构分析">#</a> 表结构分析</h4><p><img data-src="https://img-blog.csdnimg.cn/20210718145032178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="二-创建项目工程并导入依赖"><a class="anchor" href="#二-创建项目工程并导入依赖">#</a> 二、创建项目工程，并导入依赖</h4><p><img data-src="https://img-blog.csdnimg.cn/2021071810423795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上面缺少了一个连接池依赖，在 pom.xml 文件中加入即可，当然不加也没有什么关系，我个人比较喜欢使用</p><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span>dependency<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>alibaba<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>druid<span class="token operator">-</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">10</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre> <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></pre></td></tr></table></figure><p>创建好了之后，把一些没用的目录和文件删掉，<br><img data-src="https://img-blog.csdnimg.cn/20210718104543251.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>配置 yml 文件<br><img data-src="https://img-blog.csdnimg.cn/20210718115112824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后根据数据库编写实体类，编写基本的 CRUD 方法 最后应该是这样子，因为类太多就不贴代码了，后面会提供源码下载<br><img data-src="https://img-blog.csdnimg.cn/20210718115224602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="创建controller"><a class="anchor" href="#创建controller">#</a> 创建 Controller</h4><p>创建一个 controller 的包，在包里面创建一个 TestController 类，源码如下：</p><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>package work<span class="token punctuation">.</span>zx<span class="token punctuation">.</span>controller<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PostMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ResponseBody</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre>@Controller</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre>    @<span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"toLogin"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token keyword">public</span> String <span class="token function">toLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"去登录"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"login"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    @<span class="token function">PostMapping</span><span class="token punctuation">(</span><span class="token string">"/toMain"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">public</span> String <span class="token function">toMain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"去主页"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"main"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>    @<span class="token function">PostMapping</span><span class="token punctuation">(</span><span class="token string">"/toError"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">public</span> String <span class="token function">toError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"去失败的页面"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"error.html"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>当然我们也建立了对应的静态页面。<br><img data-src="https://img-blog.csdnimg.cn/20210718120952860.png" alt="在这里插入图片描述"><br>login.html</p><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token operator">&lt;</span>title<span class="token operator">></span>登录<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"/login"</span> method<span class="token operator">=</span><span class="token string">"post"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="9"></td><td><pre>    用户名<span class="token operator">:</span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="10"></td><td><pre>    密码<span class="token operator">:</span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"提交"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure><p>error.html</p><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token operator">&lt;</span>title<span class="token operator">></span>失败<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="8"></td><td><pre>登录失败</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure><p>main.html</p><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token operator">&lt;</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token operator">&lt;</span>title<span class="token operator">></span>登录炒年糕<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token operator">&lt;</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="8"></td><td><pre>登录成功</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></pre></td></tr></table></figure><h4 id="下面来配置springsecurity"><a class="anchor" href="#下面来配置springsecurity">#</a> 下面来配置 springSecurity</h4><p>创建一个 config 的包，在里面创建 SecurityConfig 配置类，这个配置类要继承<br>WebSecurityConfigurerAdapter 类<br>并且重写里面的 void configure (HttpSecurity http) throws Exception 方法<br>如下</p><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>package work<span class="token punctuation">.</span>zx<span class="token punctuation">.</span>Config<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>builders<span class="token punctuation">.</span>HttpSecurity</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span>WebSecurityConfigurerAdapter</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>bcrypt<span class="token punctuation">.</span>BCryptPasswordEncoder</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>password<span class="token punctuation">.</span>PasswordEncoder</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>@Configuration</pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> extends WebSecurityConfigurerAdapter <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span>HttpSecurity http<span class="token punctuation">)</span> throws Exception <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token comment">// 自定义登录页</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        http<span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token string">"/toLogin"</span><span class="token punctuation">)</span> <span class="token comment">// 登录页面</span></pre></td></tr><tr><td data-num="19"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">loginProcessingUrl</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span> <span class="token comment">// 登录提交的请求 ，必须和登录表单那边的 action 一致才行</span></pre></td></tr><tr><td data-num="20"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">successForwardUrl</span><span class="token punctuation">(</span><span class="token string">"/toMain"</span><span class="token punctuation">)</span> <span class="token comment">// 登录成功后跳转页面 // 跳转页面是在 Controller 中实现的</span></pre></td></tr><tr><td data-num="21"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">failureForwardUrl</span><span class="token punctuation">(</span><span class="token string">"/toError"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 登录失败的页面 // 也是 post 请求</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token comment">// 认证授权</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="25"></td><td><pre>                <span class="token comment">// 开放登录请求</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/toLogin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/toError"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/login"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token comment">// 关闭 csrf 这个是跨站伪造攻击，关了就行</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>    @Bean</pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token keyword">public</span> PasswordEncoder <span class="token function">getPw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token function">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h4 id="下面来自定义的登录逻辑"><a class="anchor" href="#下面来自定义的登录逻辑">#</a> 下面来自定义的登录逻辑</h4><p>创建一个 service 包，在其下新建一个 LoginUserService 这个类实现 UserDetailsService 接口 重写其中的 UserDetails loadUserByUsername (String username) 方法<br>== 注・：因为我考虑不周到，需要修改一下，我们实体类的名字 将 User 类 修改为 UserVo, 因为 SpinrgSecurity 里面也有一个 User 类 产生冲突了，==<br><img data-src="https://img-blog.csdnimg.cn/20210718140207527.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>package work<span class="token punctuation">.</span>zx<span class="token punctuation">.</span>service<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>GrantedAuthority</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>authority<span class="token punctuation">.</span>SimpleGrantedAuthority</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span>User</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span>UserDetails</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span>UserDetailsService</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span>UsernameNotFoundException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span>password<span class="token punctuation">.</span>PasswordEncoder</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token module">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Service</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">import</span> <span class="token module">work<span class="token punctuation">.</span>zx<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>PermissionMapper</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">import</span> <span class="token module">work<span class="token punctuation">.</span>zx<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>RoleMapper</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">import</span> <span class="token module">work<span class="token punctuation">.</span>zx<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UserMapper</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">import</span> <span class="token module">work<span class="token punctuation">.</span>zx<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Permission</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">import</span> <span class="token module">work<span class="token punctuation">.</span>zx<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Role</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">import</span> <span class="token module">work<span class="token punctuation">.</span>zx<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>UserVo</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">import</span> <span class="token module">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">import</span> <span class="token module">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Collection</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">import</span> <span class="token module">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>LinkedList</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">import</span> <span class="token module">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>@Service</pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginUserService</span> implements UserDetailsService <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>    @Autowired</pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token keyword">private</span> RoleMapper roleMapper<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>    @Autowired</pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">private</span> PermissionMapper permissionMapper<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre></pre></td></tr><tr><td data-num="33"></td><td><pre>    @Autowired</pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token keyword">private</span> PasswordEncoder passwordEncoder<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre></pre></td></tr><tr><td data-num="36"></td><td><pre>    @Autowired</pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token keyword">private</span> UserMapper userMapper<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre>    @Override</pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token keyword">public</span> UserDetails <span class="token function">loadUserByUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> throws UsernameNotFoundException <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token comment">// 存放权限的</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        Collection<span class="token operator">&lt;</span>GrantedAuthority<span class="token operator">></span> authorities <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token generic-function"><span class="token function">ArrayList</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"自定义登录"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token comment">//1、根据用户名去数据库查询，如果不存在抛出 UserNameNotFoundExeption 异常</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        UserVo userVo<span class="token operator">=</span>userMapper<span class="token punctuation">.</span><span class="token function">selectBYUserName</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre>        <span class="token keyword">if</span><span class="token punctuation">(</span>userVo<span class="token operator">==</span>null<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"用户名不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token function">UsernameNotFoundException</span><span class="token punctuation">(</span><span class="token string">"用户名不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>        <span class="token comment">// 因为数据库中目前存放的是明文，一般在注册的时候都会加密，这里我就手动加密了</span></pre></td></tr><tr><td data-num="55"></td><td><pre>        String password<span class="token operator">=</span>passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>userVo<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>       <span class="token comment">// 拿到用户角色</span></pre></td></tr><tr><td data-num="57"></td><td><pre>        List<span class="token operator">&lt;</span>Role<span class="token operator">></span> roles<span class="token operator">=</span>roleMapper<span class="token punctuation">.</span><span class="token function">selectByUserId</span><span class="token punctuation">(</span>userVo<span class="token punctuation">.</span><span class="token function">getUid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token keyword">for</span><span class="token punctuation">(</span>Role role<span class="token operator">:</span> roles<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>            authorities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token function">SimpleGrantedAuthority</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span><span class="token function">getRoleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>            <span class="token comment">// 拿到用户具有的权限</span></pre></td></tr><tr><td data-num="61"></td><td><pre>            List<span class="token operator">&lt;</span>Permission<span class="token operator">></span> permissionList<span class="token operator">=</span>permissionMapper<span class="token punctuation">.</span><span class="token function">selectByRoleId</span><span class="token punctuation">(</span>role<span class="token punctuation">.</span><span class="token function">getRid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>            <span class="token keyword">for</span> <span class="token punctuation">(</span>Permission permission<span class="token operator">:</span>permissionList<span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>                <span class="token comment">// 添加到</span></pre></td></tr><tr><td data-num="64"></td><td><pre>                authorities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token function">SimpleGrantedAuthority</span><span class="token punctuation">(</span>permission<span class="token punctuation">.</span><span class="token function">getStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="67"></td><td><pre></pre></td></tr><tr><td data-num="68"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token function">User</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>password<span class="token punctuation">,</span>authorities<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>在这需要主注意一下，数据库中的角色名称 当然也可以称为角色标识符 必须以 ROlE_为前缀<br>是 Spring Security 规定的，不要乱起哦。<br><img data-src="https://img-blog.csdnimg.cn/20210718141301675.png" alt="在这里插入图片描述"><br>最后是开启注解授权，也就是在 Controller 类上或者方法上加上注解即可授权那种<br>只需要在启动类上加一个注解即可<br><img data-src="https://img-blog.csdnimg.cn/20210718141454747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>接下来我们编写几个接口测试一下角色和权限<br>如下：<br><img data-src="https://img-blog.csdnimg.cn/20210718143604620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight cpp"><figcaption data-lang="C++"></figcaption><table><tr><td data-num="1"></td><td><pre>@<span class="token function">GetMapping</span><span class="token punctuation">(</span><span class="token string">"/cs"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    @ResponseBody</pre></td></tr><tr><td data-num="3"></td><td><pre>    @<span class="token function">PreAuthorize</span><span class="token punctuation">(</span><span class="token string">"hasAnyAuthority('sys:user:delete')"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token keyword">public</span> String <span class="token function">cs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="5"></td><td><pre>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"说明你具有delete权限"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"说明你具有delete权限"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>    @<span class="token function">GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    @ResponseBody</pre></td></tr><tr><td data-num="11"></td><td><pre>    @<span class="token function">PreAuthorize</span><span class="token punctuation">(</span><span class="token string">"hasRole('ROLE_admin')"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token keyword">public</span> String <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"说明你具有ROLE_admin角色"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"说明你具有ROLE_admin角色"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>当然数据库中也准备了相应的测试数据，分别是 zx 账号，具有需要的角色和权限， te 账号，没有任何权限</p><h4 id="1-先使用te账号登录访问"><a class="anchor" href="#1-先使用te账号登录访问">#</a> 1、先使用 te 账号登录访问</h4><p>登录成功<br><img data-src="https://img-blog.csdnimg.cn/2021071814381876.png" alt="在这里插入图片描述"><br>访问 cs 接口失败<br><img data-src="https://img-blog.csdnimg.cn/20210718143838501.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTc5NTM0OQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>访问 test 接口失败<br><img data-src="https://img-blog.csdnimg.cn/20210718143933384.png" alt="在这里插入图片描述"></p><h4 id="接下来是zx账号"><a class="anchor" href="#接下来是zx账号">#</a> 接下来是 zx 账号</h4><p>权限测试成功<br><img data-src="https://img-blog.csdnimg.cn/20210718144048646.png" alt="在这里插入图片描述"><br>角色测试成功</p><p><img data-src="https://img-blog.csdnimg.cn/20210718144125639.png" alt="在这里插入图片描述"><br>那么到此，就完毕了<br>下期会出 SpringBoot 整合 Shiro 做授权和认证方面的案例、以及前后端分离的授权认证实现 关注我敬请期待哦<br>源码下载地址：</p><p>链接：<span class="exturl" data-url="aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMXZyZU8xRnByMXpDNHdxN3Iyb0RDZ3c=">https://pan.baidu.com/s/1vreO1Fpr1zC4wq7r2oDCgw</span><br>提取码：bbvc</p><div class="tags"><a href="/mb-blog/tags/SpringBoot/" rel="tag"><i class="ic i-tag"></i> SpringBoot</a> <a href="/mb-blog/tags/%E6%9D%83%E9%99%90/" rel="tag"><i class="ic i-tag"></i> 权限</a> <a href="/mb-blog/tags/SpringSecurity/" rel="tag"><i class="ic i-tag"></i> SpringSecurity</a></div></div><footer><div class="meta"><span class="item"><span class="icon"><i class="ic i-calendar-check"></i> </span><span class="text">更新于</span> <time title="修改时间：2022-12-04 23:44:54" itemprop="dateModified" datetime="2022-12-04T23:44:54+08:00">2022-12-04</time> </span><span id="/基于SpringBoot整合SpringSecurity的认证授权" class="item leancloud_visitors" data-flag-title="基于SpringBoot整合SpringSecurity的认证授权" title="阅读次数"><span class="icon"><i class="ic i-eye"></i> </span><span class="text">阅读次数</span> <span class="leancloud-visitors-count"></span> <span class="text">次</span></span></div><div class="reward"><button><i class="ic i-heartbeat"></i> 赞赏</button><p>请我喝[茶]~(￣▽￣)~*</p><div id="qr"><div><img data-src="/mb-blog/images/wechatpay.png" alt="摘星 微信支付"><p>微信支付</p></div><div><img data-src="/mb-blog/images/alipay.png" alt="摘星 支付宝"><p>支付宝</p></div><div><img data-src="/mb-blog/images/paypal.png" alt="摘星 贝宝"><p>贝宝</p></div></div></div><div id="copyright"><ul><li class="author"><strong>本文作者： </strong>摘星 <i class="ic i-at"><em>@</em></i>星辰驿站</li><li class="link"><strong>本文链接：</strong> <a href="https://zhai-xing.github.io/mb-blog/%E5%9F%BA%E4%BA%8ESpringBoot%E6%95%B4%E5%90%88SpringSecurity%E7%9A%84%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83" title="基于SpringBoot整合SpringSecurity的认证授权">https://zhai-xing.github.io/mb-blog/基于SpringBoot整合SpringSecurity的认证授权</a></li><li class="license"><strong>版权声明： </strong>本站所有文章除特别声明外，均采用 <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo"><i class="ic i-creative-commons"><em>(CC)</em></i>BY-NC-SA</span> 许可协议。转载请注明出处！</li></ul></div></footer></article></div><div class="post-nav"><div class="item left"><a href="/mb-blog/2022/12/03/%E7%AC%AC%E4%B8%80%E6%AC%A1/" itemprop="url" rel="prev" data-background-image="https:&#x2F;&#x2F;blog-1259743669.cos.ap-chengdu.myqcloud.com&#x2F;5af17f7f881b11ebb6edd017c2d2eca2.jpg" title="第一次"><span class="type">上一篇</span> <span class="category"><i class="ic i-flag"></i> web前端</span><h3>第一次</h3></a></div><div class="item right"><a href="/mb-blog/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0" itemprop="url" rel="next" data-background-image="https:&#x2F;&#x2F;blog-1259743669.cos.ap-chengdu.myqcloud.com&#x2F;81d1da7e1ba142629967fea196c73e0e.jpg" title="SQL必知必会读书笔记"><span class="type">下一篇</span> <span class="category"><i class="ic i-flag"></i> 读书笔记</span><h3>SQL必知必会读书笔记</h3></a></div></div><div class="wrap" id="comments"></div></div><div id="sidebar"><div class="inner"><div class="panels"><div class="inner"><div class="contents panel pjax" data-title="文章目录"><ol class="toc"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%BB%80%E4%B9%88%E6%98%AFrbac"><span class="toc-number">1.</span> <span class="toc-text">什么是 RBAC</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%9C%AC%E6%A1%88%E4%BE%8B%E7%9A%84rbac%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF"><span class="toc-number">2.</span> <span class="toc-text">本案例的 RBAC 的设计思路</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%B8%80-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E8%A1%A8"><span class="toc-number">3.</span> <span class="toc-text">一、数据库建表</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%A1%A8%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90"><span class="toc-number">4.</span> <span class="toc-text">表结构分析</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%BA%8C-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%B7%A5%E7%A8%8B%E5%B9%B6%E5%AF%BC%E5%85%A5%E4%BE%9D%E8%B5%96"><span class="toc-number">5.</span> <span class="toc-text">二、创建项目工程，并导入依赖</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%88%9B%E5%BB%BAcontroller"><span class="toc-number">6.</span> <span class="toc-text">创建 Controller</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%B8%8B%E9%9D%A2%E6%9D%A5%E9%85%8D%E7%BD%AEspringsecurity"><span class="toc-number">7.</span> <span class="toc-text">下面来配置 springSecurity</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%B8%8B%E9%9D%A2%E6%9D%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E7%99%BB%E5%BD%95%E9%80%BB%E8%BE%91"><span class="toc-number">8.</span> <span class="toc-text">下面来自定义的登录逻辑</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#1-%E5%85%88%E4%BD%BF%E7%94%A8te%E8%B4%A6%E5%8F%B7%E7%99%BB%E5%BD%95%E8%AE%BF%E9%97%AE"><span class="toc-number">9.</span> <span class="toc-text">1、先使用 te 账号登录访问</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%98%AFzx%E8%B4%A6%E5%8F%B7"><span class="toc-number">10.</span> <span class="toc-text">接下来是 zx 账号</span></a></li></ol></div><div class="related panel pjax" data-title="系列文章"><ul><li class="active"><a href="/mb-blog/%E5%9F%BA%E4%BA%8ESpringBoot%E6%95%B4%E5%90%88SpringSecurity%E7%9A%84%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83" rel="bookmark" title="基于SpringBoot整合SpringSecurity的认证授权">基于SpringBoot整合SpringSecurity的认证授权</a></li><li><a href="/mb-blog/JUC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" rel="bookmark" title="JUC学习笔记">JUC学习笔记</a></li><li><a href="/mb-blog/Java%E5%B8%B8%E7%94%A8%E5%AE%B9%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" rel="bookmark" title="Java常用容器学习笔记">Java常用容器学习笔记</a></li></ul></div><div class="overview panel" data-title="站点概览"><div class="author" itemprop="author" itemscope itemtype="http://schema.org/Person"><img class="image" itemprop="image" alt="摘星" data-src="/mb-blog/images/avatar.jpg"><p class="name" itemprop="name">摘星</p><div class="description" itemprop="description">欢迎来到摘星的小破站，这里你可以阅读我的学习笔记并提出独到的见解~我们将互相学习交流知识，共同进步</div></div><nav class="state"><div class="item posts"><a href="/mb-blog/archives/"><span class="count">13</span> <span class="name">文章</span></a></div><div class="item categories"><a href="/mb-blog/categories/"><span class="count">15</span> <span class="name">分类</span></a></div><div class="item tags"><a href="/mb-blog/tags/"><span class="count">23</span> <span class="name">标签</span></a></div></nav><div class="social"></div><ul class="menu"><li class="item"><a href="/mb-blog/" rel="section"><i class="ic i-hemo"></i>主站</a></li><li class="item"><a href="/mb-blog/about/" rel="section"><i class="ic i-about"></i>关于我</a></li><li class="item"><a href="/mb-blog/categories/" rel="section"><i class="ic i-th"></i>分类</a></li><li class="item"><a href="/mb-blog/tags/" rel="section"><i class="ic i-tags"></i>标签</a></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-feather"></i>文章</a><ul class="submenu"><li class="item"><a href="/mb-blog/archives/" rel="section"><i class="ic i-list-alt"></i>归档</a></li></ul></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-feather"></i>链接</a><ul class="submenu"><li class="item"><a href="/mb-blog/friends/" rel="section"><i class="ic i-heart"></i>友链</a></li><li class="item"><a href="/mb-blog/links/" rel="section"><i class="ic i-magic"></i>项目链接</a></li></ul></li><li class="item"><a href="/mb-blog/guestbook/" rel="section"><i class="ic i-guestbook"></i>留言板</a></li></ul></div></div></div><ul id="quick"><li class="prev pjax"><a href="/mb-blog/2022/12/03/%E7%AC%AC%E4%B8%80%E6%AC%A1/" rel="prev" title="上一篇"><i class="ic i-chevron-left"></i></a></li><li class="up"><i class="ic i-arrow-up"></i></li><li class="down"><i class="ic i-arrow-down"></i></li><li class="next pjax"><a href="/mb-blog/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0" rel="next" title="下一篇"><i class="ic i-chevron-right"></i></a></li><li class="percent"></li></ul></div></div><div class="dimmer"></div></div></main><footer id="footer"><div class="inner"><div class="widgets"><div class="rpost pjax"><h2>随机文章</h2><ul><li class="item"><div class="breadcrumb"><a href="/mb-blog/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/" title="分类于 计算机基础">计算机基础</a></div><span><a href="/mb-blog/IO%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8" title="IO模式">IO模式</a></span></li><li class="item"><div class="breadcrumb"><a href="/mb-blog/categories/java/" title="分类于 java">java</a></div><span><a href="/mb-blog/%E5%9F%BA%E4%BA%8ESpringBoot%E6%95%B4%E5%90%88SpringSecurity%E7%9A%84%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83" title="基于SpringBoot整合SpringSecurity的认证授权">基于SpringBoot整合SpringSecurity的认证授权</a></span></li><li class="item"><div class="breadcrumb"><a href="/mb-blog/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/" title="分类于 大数据">大数据</a></div><span><a href="/mb-blog/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0" title="Hadoop集群搭建笔记">Hadoop集群搭建笔记</a></span></li><li class="item"><div class="breadcrumb"><a href="/mb-blog/categories/web%E5%89%8D%E7%AB%AF/" title="分类于 web前端">web前端</a></div><span><a href="/mb-blog/2022/12/03/%E7%AC%AC%E4%B8%80%E6%AC%A1/" title="第一次">第一次</a></span></li><li class="item"><div class="breadcrumb"></div><span><a href="/mb-blog/2024/08/03/hello-world/" title="Hello World">Hello World</a></span></li><li class="item"><div class="breadcrumb"><a href="/mb-blog/categories/MySQL/" title="分类于 MySQL">MySQL</a></div><span><a href="/mb-blog/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" title="MySQL学习笔记">MySQL学习笔记</a></span></li><li class="item"><div class="breadcrumb"><a href="/mb-blog/categories/Python/" title="分类于 Python">Python</a></div><span><a href="/mb-blog/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4" title="Python自动化运维">Python自动化运维</a></span></li><li class="item"><div class="breadcrumb"><a href="/mb-blog/categories/MySQL/" title="分类于 MySQL">MySQL</a> <i class="ic i-angle-right"></i> <a href="/mb-blog/categories/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93/" title="分类于 数据库">数据库</a> <i class="ic i-angle-right"></i> <a href="/mb-blog/categories/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" title="分类于 读书笔记">读书笔记</a></div><span><a href="/mb-blog/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0" title="SQL必知必会读书笔记">SQL必知必会读书笔记</a></span></li><li class="item"><div class="breadcrumb"><a href="/mb-blog/categories/java/" title="分类于 java">java</a> <i class="ic i-angle-right"></i> <a href="/mb-blog/categories/%E5%BC%82%E6%AD%A5%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" title="分类于 异步设计模式">异步设计模式</a></div><span><a href="/mb-blog/JUC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" title="JUC学习笔记">JUC学习笔记</a></span></li><li class="item"><div class="breadcrumb"><a href="/mb-blog/categories/Redis/" title="分类于 Redis">Redis</a></div><span><a href="/mb-blog/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" title="Redis学习笔记">Redis学习笔记</a></span></li></ul></div><div><h2>最新评论</h2><ul class="leancloud-recent-comment"></ul></div></div><div class="status"><div class="copyright">&copy; 2010 – <span itemprop="copyrightYear">2024</span> <span class="with-love"><i class="ic i-sakura rotate"></i> </span><span class="author" itemprop="copyrightHolder">摘星 @ Pick stars</span></div><div class="count"><span class="post-meta-item-icon"><i class="ic i-chart-area"></i> </span><span title="站点总字数">68k 字</span> <span class="post-meta-divider">|</span> <span class="post-meta-item-icon"><i class="ic i-coffee"></i> </span><span title="站点阅读时长">1:01</span></div></div></div></footer></div><script data-config type="text/javascript">var LOCAL={path:"/基于SpringBoot整合SpringSecurity的认证授权",favicon:{show:"（●´3｀●）やれやれだぜ",hide:"(´Д｀)大変だ！"},search:{placeholder:"文章搜索",empty:"关于 「 ${query} 」，什么也没搜到",stats:"${time} ms 内找到 ${hits} 条结果"},valine:!0,fancybox:!0,copyright:'复制成功，转载请遵守 <i class="ic i-creative-commons"></i>BY-NC-SA 协议。',ignores:[function(e){return e.includes("#")},function(e){return new RegExp(LOCAL.path+"$").test(e)}]}</script><script src="https://cdn.polyfill.io/v2/polyfill.js"></script><script src="//cdn.jsdelivr.net/combine/npm/pace-js@1.0.2/pace.min.js,npm/pjax@0.2.8/pjax.min.js,npm/whatwg-fetch@3.4.0/dist/fetch.umd.min.js,npm/animejs@3.2.0/lib/anime.min.js,npm/algoliasearch@4/dist/algoliasearch-lite.umd.js,npm/instantsearch.js@4/dist/instantsearch.production.min.js,npm/lozad@1/dist/lozad.min.js,npm/quicklink@2/dist/quicklink.umd.js"></script><script src="/mb-blog/js/app.js?v=0.2.5"></script></body></html>