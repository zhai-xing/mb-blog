<!DOCTYPE html><html lang="zh-CN"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=2"><meta name="theme-color" content="#FFF"><link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png"><link rel="icon" type="image/ico" sizes="32x32" href="/images/favicon.ico"><link rel="mask-icon" href="/images/logo.svg" color=""><link rel="manifest" href="/images/manifest.json"><meta name="msapplication-config" content="/images/browserconfig.xml"><meta http-equiv="Cache-Control" content="no-transform"><meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" type="application/rss+xml" title="星辰驿站" href="http://dj_zhaixing.gitee.io/rss.xml"><link rel="alternate" type="application/atom+xml" title="星辰驿站" href="http://dj_zhaixing.gitee.io/atom.xml"><link rel="alternate" type="application/json" title="星辰驿站" href="http://dj_zhaixing.gitee.io/feed.json"><link rel="stylesheet" href="//fonts.googleapis.com/css?family=Mulish:300,300italic,400,400italic,700,700italic%7CFredericka%20the%20Great:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20JP:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20SC:300,300italic,400,400italic,700,700italic%7CInconsolata:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext"><link rel="stylesheet" href="/css/app.css?v=0.2.5"><meta name="keywords" content="SQL,读书笔记,数据库,命令"><link rel="canonical" href="http://dj_zhaixing.gitee.io/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0"><title>SQL必知必会读书笔记 - 读书笔记 - 数据库 - MySQL | Pick stars = 星辰驿站 = =别怕路长梦远，总有星河照耀=</title><meta name="generator" content="Hexo 6.3.0"></head><body itemscope itemtype="http://schema.org/WebPage"><div id="loading"><div class="cat"><div class="body"></div><div class="head"><div class="face"></div></div><div class="foot"><div class="tummy-end"></div><div class="bottom"></div><div class="legs left"></div><div class="legs right"></div></div><div class="paw"><div class="hands left"></div><div class="hands right"></div></div></div></div><div id="container"><header id="header" itemscope itemtype="http://schema.org/WPHeader"><div class="inner"><div id="brand"><div class="pjax"><h1 itemprop="name headline">SQL必知必会读书笔记</h1><div class="meta"><span class="item" title="创建时间：2023-02-09 22:34:19"><span class="icon"><i class="ic i-calendar"></i> </span><span class="text">发表于</span> <time itemprop="dateCreated datePublished" datetime="2023-02-09T22:34:19+08:00">2023-02-09</time> </span><span class="item" title="本文字数"><span class="icon"><i class="ic i-pen"></i> </span><span class="text">本文字数</span> <span>6.8k</span> <span class="text">字</span> </span><span class="item" title="阅读时长"><span class="icon"><i class="ic i-clock"></i> </span><span class="text">阅读时长</span> <span>6 分钟</span></span></div></div></div><nav id="nav"><div class="inner"><div class="toggle"><div class="lines" aria-label="切换导航栏"><span class="line"></span> <span class="line"></span> <span class="line"></span></div></div><ul class="menu"><li class="item title"><a href="/" rel="start">Pick stars</a></li></ul><ul class="right"><li class="item theme"><i class="ic i-sun"></i></li><li class="item search"><i class="ic i-search"></i></li></ul></div></nav></div><div id="imgs" class="pjax"><img src="https://blog-1259743669.cos.ap-chengdu.myqcloud.com/81d1da7e1ba142629967fea196c73e0e.jpg"></div></header><div id="waves"><svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"/></defs><g class="parallax"><use xlink:href="#gentle-wave" x="48" y="0"/><use xlink:href="#gentle-wave" x="48" y="3"/><use xlink:href="#gentle-wave" x="48" y="5"/><use xlink:href="#gentle-wave" x="48" y="7"/></g></svg></div><main><div class="inner"><div id="main" class="pjax"><div class="article wrap"><div class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList"><i class="ic i-home"></i> <span><a href="/">首页</a></span><i class="ic i-angle-right"></i> <span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/MySQL/" itemprop="item" rel="index" title="分类于 MySQL"><span itemprop="name">MySQL</span></a><meta itemprop="position" content="1"></span><i class="ic i-angle-right"></i> <span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93/" itemprop="item" rel="index" title="分类于 数据库"><span itemprop="name">数据库</span></a><meta itemprop="position" content="2"></span><i class="ic i-angle-right"></i> <span class="current" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" itemprop="item" rel="index" title="分类于 读书笔记"><span itemprop="name">读书笔记</span></a><meta itemprop="position" content="3"></span></div><article itemscope itemtype="http://schema.org/Article" class="post block" lang="zh-CN"><link itemprop="mainEntityOfPage" href="http://dj_zhaixing.gitee.io/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0"><span hidden itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="image" content="/images/avatar.jpg"><meta itemprop="name" content="摘星"><meta itemprop="description" content="=别怕路长梦远，总有星河照耀=, 欢迎来到摘星的小破站，这里你可以阅读我的学习笔记并提出独到的见解~我们将互相学习交流知识，共同进步"></span><span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization"><meta itemprop="name" content="星辰驿站"></span><div class="body md" itemprop="articleBody"><h3 id="1-了解sql"><a class="anchor" href="#1-了解sql">#</a> 1、了解 SQL</h3><h3 id="2-检索数据"><a class="anchor" href="#2-检索数据">#</a> 2、检索数据</h3><h4 id="21select语句"><a class="anchor" href="#21select语句">#</a> 2.1SELECT 语句</h4><ul><li>多条 SQL 语句需要用 “;&quot; 分隔</li><li>SQL 语句不区分大小写，但是我们习惯对 SQL 关键字使用大写，而对列名和表名用小写</li><li>在处理 SQL 语句时，其中的空格将被忽略</li></ul><h4 id="22-检索单个列"><a class="anchor" href="#22-检索单个列">#</a> 2.2 检索单个列</h4><pre><code>SELECT '被显示列名' FROM 表名;
</code></pre><h4 id="23检索多个列"><a class="anchor" href="#23检索多个列">#</a> 2.3 检索多个列</h4><ul><li>检索多个列时，在 SELECT 关键字后列出，</li><li>列名以逗号分隔</li></ul><pre><code>SELECT '列名' FROM 数据源
</code></pre><h4 id="24检索所有列"><a class="anchor" href="#24检索所有列">#</a> 2.4 检索所有列</h4><ul><li>检索所有列需要使用通配符 *</li><li>非必要不使用，会有一定的性能损耗</li></ul><pre><code>SELECT * FROM 数据源
</code></pre><h4 id="25-检索不同的值"><a class="anchor" href="#25-检索不同的值">#</a> 2.5、检索不同的值</h4><pre><code>select DISTINCT vend_id from Products;
</code></pre><ul><li>使用关键字 DISTINCT</li><li>DISTINCT 关键字作用于所有的列，不仅仅是跟在其后面的那一列，例如 SELECT DISTINCT vend_id,prod_price 除非两列完全相同，否则所有行都会被显示出来。</li></ul><h4 id="26-限制显示结果"><a class="anchor" href="#26-限制显示结果">#</a> 2.6、限制显示结果</h4><ul><li>在 mysql 中限制显示结果使用 LIMIT 5; 表示只显示前 5 条记录，使用 LIMIT 5 OFFSET 5<br>表示显示从第 5 行起的 5 条记录；(注：第一个被检索的行是第 0 行。)</li><li>而在 oracle 里面需要使用行计数器来实现</li></ul><h3 id="3-排序检索数据"><a class="anchor" href="#3-排序检索数据">#</a> 3、排序检索数据</h3><h4 id="31排序数据"><a class="anchor" href="#31排序数据">#</a> 3.1 排序数据</h4><ul><li>使用 sql 语句检索出的数据不是随机的，但是如果不排序，一般都是按照其底层表中出现的顺序显示</li><li>sql 语句由子句构成，有些子句是必须的，而有些则是可选的，一个子句通常由一个关键字加上所提供的数据组成，</li><li>使用 ORDER BY 取一个列或者多个列的名字 进行排序</li><li><strong>在指定一条 ORDER BY 的子句时，应该保证是 SELECT 中的最后一条子句</strong>，如果不是将会出现错误消息</li><li>用来被排序的列，也可以是不被显示的，</li></ul><pre><code>SELECT * FROM products ORDER BY vend_id 
</code></pre><h4 id="32-按多个列排序"><a class="anchor" href="#32-按多个列排序">#</a> 3.2 按多个列排序</h4><ul><li>按多个列排序，会有首次，先按什么再按什么</li><li>ORDER BY prod_id, prod_price 这里的意思是 先按 prod_id 排序，再按 prod_price 排序。</li><li>还可以按列的位置进行排序 例如 ORDER BY 2,3 这里的意思是 先按第 2 列排序，再按第 3 列排序。</li></ul><h4 id="33-指定排序方向"><a class="anchor" href="#33-指定排序方向">#</a> 3.3 指定排序方向</h4><ul><li>默认是升序排序（ASC）</li><li>降序排序使用关键字 ：DESC</li></ul><pre><code>SELECT * FROM products ORDER BY vend_id DESC;

//先按 vend_id降序，再按prod_name升序
SELECT * FROM products ORDER BY vend_id DESC,prod_name 
</code></pre><h3 id="4-过滤数据"><a class="anchor" href="#4-过滤数据">#</a> 4、过滤数据</h3><h4 id="41使用where子句"><a class="anchor" href="#41使用where子句">#</a> 4.1 使用 where 子句</h4><ol><li>使用 where 子句可检只索指定条件的数据</li><li>where 子句在 from 之后，</li><li>当然也可以将数据筛选放在应用层，但是会导致网络带宽的浪费，致使网络发送多余的数据</li><li>在同时使用 order by 子句与 where 子句时， order by 应该放在最后</li></ol><pre><code>SELECT * FROM products WHERE prod_price =3.49
</code></pre><h4 id="42-where-子句操作符"><a class="anchor" href="#42-where-子句操作符">#</a> 4.2 where 子句操作符</h4><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>操作符</td><td>说明</td><td>备注</td></tr><tr><td>=</td><td>等于</td><td></td></tr><tr><td>&lt;&gt; （!=)</td><td>不等于</td><td>可以用！= 也可以用 &lt;&gt; mysql 都适用</td></tr><tr><td>&lt;</td><td>小于</td><td></td></tr><tr><td>&gt;</td><td>大于</td><td></td></tr><tr><td>&lt;=</td><td>小于等于</td><td></td></tr><tr><td>&gt;=</td><td>大于等于</td><td></td></tr><tr><td>IS NULL</td><td>为 null 值</td><td>在判断不为 null 时 需要用 is not null 而不能使用！=null</td></tr><tr><td>BETWEEN</td><td>介于两个值之间</td><td></td></tr></tbody></table><pre><code>SELECT * FROM products WHERE prod_price &gt;3.49

SELECT * FROM products WHERE vend_id !='DLL01'

SELECT * FROM products WHERE vend_id BETWEEN 2 AND 10

SELECT * FROM products WHERE prod_price BETWEEN 2 AND 10

SELECT * FROM products WHERE prod_name IS NULL

select * from customers where cust_email is not null
</code></pre><ul><li>WHERE 语句中的插件，有些是在单引号中的，有些没有，是因为单引号是用来限制字符串的，如果比较的是字符串，则需要使用单引号，如果不是，则不必</li><li>使用 BETWEEN 时，需用两个值配合 AND 来使用，一个高端值，一个低端值，都是闭区间</li><li>IS NULL 与 0，空字符串，空格，等都不同， 不能使用 = null 必须使用 IS NULL</li></ul><h3 id="5-高级数据过滤"><a class="anchor" href="#5-高级数据过滤">#</a> 5、高级数据过滤</h3><h4 id="51组合where-子句"><a class="anchor" href="#51组合where-子句">#</a> 5.1 组合 WHERE 子句</h4><p>SQL 允许给出多个 WHERE 子句，子句使用 AND 和 OR 来进行连接</p><pre><code>SELECT * FROM products WHERE vend_id='DLL01' AND prod_price&lt;=4;

SELECT * FROM products WHERE vend_id='DLL01' OR vend_id='BRS01'
</code></pre><p>** 组合 AND 和 OR 的适合会产生一个问题 逻辑的先后执行，需要加括号来解决 **<br>如下：<br>需求：求编号为 DLL01 或者 BRS01 的产品中产品价格大于 10;<br><code>SELECT * FROM products WHERE (vend_id='DLL01' OR vend_id='BRS01') AND prod_price&gt;=10</code><br>如果没有括号的话，意思就变成了求 id=dll01 或者是 id=brs01 且价格大于 10 的，显然不符合题意。</p><h4 id="52-in操作符"><a class="anchor" href="#52-in操作符">#</a> 5.2 IN 操作符</h4><ul><li>IN 操作符用来指定条件范围，范围内的每个条件都可以匹配，</li><li>IN 取一组由逗号分隔、括在圆括号中的合法值。</li><li>IN 可以包含其他 SELECT 语句。</li><li>在大量数据下，IN 操作符的性能比 OR 更好。</li></ul><pre><code>SELECT * FROM products WHERE vend_id IN('DLL01','BRS01'); 
</code></pre><h4 id="53-not-操作符"><a class="anchor" href="#53-not-操作符">#</a> 5.3 NOT 操作符</h4><ul><li>NOT 操作符用于在 WHERE 子句中否定其后条件的关键字</li><li>一般用于较为复杂的语句中，可降低复杂度</li></ul><pre><code>SELECT * FROM products WHERE vend_id NOT IN('DLL01','BRS01'); 

select * from customers where cust_email is not null
</code></pre><h3 id="6-使用通配符进行过滤"><a class="anchor" href="#6-使用通配符进行过滤">#</a> 6、使用通配符进行过滤</h3><ul><li>通配符是用来匹配值的一部分的特殊字符</li><li>搜索模式是由字面值、通配符或两者组合构成的搜索条件。</li><li>通配符只能适于文本字段或字符串，非文本类型的字段不能使用通配符搜索</li><li>在搜索子句中使用通配符，必须使用 LIKE 操作符</li><li>不可过渡使用通配符</li></ul><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>通配符</td><td>作用</td><td>备注</td></tr><tr><td>% (百分号)</td><td>百分号表示 任意多个字符，例如 zx%; 表示匹配任意以 zx 开头的字符，当然是否区分大小写得根据其使用得 DBMS 来确定。</td><td>注意：% 除了能匹配一个字符或多个字符，还能匹配 0 个字符， 另外 % 是不会匹配 null 的， 0 个字符不等于 null</td></tr><tr><td>_ (下划线)</td><td>下划线匹配的是单个字符</td><td></td></tr><tr><td>[] （方括号通配符）</td><td>用方括号通配符表示一个字符集，他必须匹配指定的位置</td><td>这个通配符可以使用 ^ 来否定，具体用法如下 （注：在 mysql 环境下不支持，需要使用 REGEXP 操作符，当然了 REGEXP 也支持更多的匹配了 ）</td></tr></tbody></table><ol><li>查询以 J 或者 M 开头的联系人</li></ol><pre><code>SELECT * FROM customers WHERE cust_contact REGEXP'[JM]'
</code></pre><ol><li>查询以 j 开头的联系人</li></ol><pre><code>SELECT * FROM customers WHERE cust_contact LIKE 'J%'
</code></pre><ol><li>查找正好是两个字符的联系人</li></ol><pre><code>SELECT * FROM customers WHERE cust_contact LIKE '__'
</code></pre><h3 id="7-创建计算字段"><a class="anchor" href="#7-创建计算字段">#</a> 7、创建计算字段</h3><h4 id="71计算字段"><a class="anchor" href="#71计算字段">#</a> 7.1 计算字段</h4><ul><li>需要显示公司和公司地址，然后这两个信息在不同表列中</li><li>列数据是大小写混合的，需要统一格式<br>等等以上问题，都是通过计算字段解决的</li></ul><h4 id="72拼接字段"><a class="anchor" href="#72拼接字段">#</a> 7.2 拼接字段</h4><ul><li>在 mysql 中需要使用函数 CONCAT ()，才能将两个字段的值进行拼接</li><li>AS 是用于取别名</li><li>还有其他函数，建议去看手册</li><li>还可以使用 例如 + - * / 等算术运算符<br><code>SELECT CONCAT(vend_name,vend_country) as '拼接后的' FROM vendors</code></li></ul><p>文本处理函数</p><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>函数</td><td>作用</td><td></td></tr><tr><td>LEFT()</td><td>返回字符串左边的字符</td><td></td></tr><tr><td>LENGTH()</td><td>返回字符串长度</td><td></td></tr><tr><td>LOWER()</td><td>将字符串转换为小写</td><td></td></tr><tr><td>LTRIM()</td><td>去掉字符串左边的空格</td><td></td></tr><tr><td>RIGHT()</td><td>返回字符串右边的字符</td><td></td></tr></tbody></table><h3 id="8-汇总数据"><a class="anchor" href="#8-汇总数据">#</a> 8、汇总数据</h3><p>我们经常需要汇总数据，而有不用实际去检索出来，例如：</p><ul><li>确定表中行数</li><li>获得表中某些行的和</li><li>找出表列某列的最大值或者最小值<br>就需要用到聚集函数：对某些行运行的函数，计算并返回一个值。</li></ul><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>函数名</td><td>作用</td><td></td></tr><tr><td>AVG()</td><td>返回某列的平均值</td><td>AVG () 只能用于单个列，若需求多个列得平均值，则需要多用几次。</td></tr><tr><td>COUNT()</td><td>返回某列的行数</td><td>需要注意的是，若参数是 * 则表示所有值都会记入， 若参数是具体某列名，则会忽略该列的 null 值，不计入</td></tr><tr><td>MAX()</td><td>返回某列最大值</td><td></td></tr><tr><td>MIN()</td><td>返回某列最小值</td><td></td></tr><tr><td>SUM()</td><td>返回某列值得和</td><td></td></tr></tbody></table><ul><li>聚集函数可多个同时应用</li></ul><pre><code>SELECT COUNT(*) AS num_items,MIN(prod_price) AS price_min,MAX(prod_price) AS price_max, AVG(prod_price) AS price_avg FROM products 
</code></pre><ul><li>可以在函数内嵌套使用 DISTINCT 标识符，去除重复得数据，再来计数， 例如下面求不同价格的平均值价格</li><li>注: DISTINCT 不能用于 COUNT () 函数</li></ul><pre><code>SELECT AVG(DISTINCT prod_price) AS avg_price FROM products WHERE vend_id='DLL01'
</code></pre><h3 id="9-分组数据"><a class="anchor" href="#9-分组数据">#</a> 9、分组数据</h3><p>分组查询，用到了 SELECT 的两个子句，分别是 GROUP BY 和 HAVING 子句</p><ul><li>使用分组可以将数据分成多个逻辑进行聚集计算，</li><li>例如我们有适合可能会让你求某个班的男女生的人数，这时候就轮到分组出场了，先</li></ul><pre><code>SELECT vend_id,COUNT(*) FROM products  GROUP BY vend_id;
</code></pre><ul><li>GROUP BY 子句可以包含任意数目的列，因而可以对分组进行嵌套，更细致的进行分组，</li></ul><h4 id="91-过滤分组"><a class="anchor" href="#91-过滤分组">#</a> 9.1 过滤分组</h4><p>SQL 允许过滤分组，，规定包括哪些分组，排除哪些分组，</p><ul><li>使用 HAVING 过滤分组</li><li>HAVING 支持所有 WHERE 的操作符，</li><li>使用 HAVING 是因为 WHERE 没有分组的概念，只能过滤指定行，而 HAVING 可以过滤分组</li><li>WHERE 是在数据分组前进行过滤，HAVING 是在数据分组后进行过滤</li><li>WHERE 排除的行不包括在分组，这可能改变计算值，</li></ul><pre><code>SELECT cust_id,COUNT(*) AS orders_count FROM orders GROUP BY cust_id HAVING COUNT(*)&gt;=2
</code></pre><p>这个查询过滤了总和小于 2 的 id;</p><hr><p>有一些情况是需要在一条语句中同时使用 WHERE 和 HAVING 的，例如：<br>例如 列出具有两个以上产品且其价格大于等于 4 的供应商</p><pre><code>SELECT vend_id,COUNT(*)AS num_prods FROM products WHERE prod_price&gt;=4 GROUP BY vend_id HAVING COUNT(*) &gt;=2;
</code></pre><h4 id="92-select子句顺序"><a class="anchor" href="#92-select子句顺序">#</a> 9.2 SELECT 子句顺序</h4><table><thead><tr><th></th><th></th><th></th></tr></thead><tbody><tr><td>SELECT</td><td>要返回的列或表达式</td><td>必须有</td></tr><tr><td>FROM</td><td>从中检索的数据表</td><td>仅仅在从表中选择数据的时候用</td></tr><tr><td>WHERE</td><td>行级过滤</td><td>否</td></tr><tr><td>GROUP BY</td><td>分组说明</td><td>仅在按组计算聚集时使用</td></tr><tr><td>HAVING</td><td>组级过滤</td><td>否</td></tr><tr><td>ORDER BY</td><td>输出顺序排序</td><td>否</td></tr></tbody></table><h3 id="10-子查询"><a class="anchor" href="#10-子查询">#</a> 10、子查询</h3><p>SQL 的子查询也就是嵌套在其他查询中的查询，</p><h4 id="101利用子查询进行过滤"><a class="anchor" href="#101利用子查询进行过滤">#</a> 10.1 利用子查询进行过滤</h4><p>假如需要列出订购物品 RGAN01 的所有顾客：</p><ol><li>检索包含物品 RGAN01 的所有订单编号</li><li>检索具有前一步骤列出的订单编号的所有顾客 ID</li><li>检索前一步列出的顾客 ID 的顾客信息</li></ol><pre><code>SELECT cust_name,cust_contact FROM customers WHERE cust_id IN (
SELECT cust_id FROM orders WHERE order_num IN (
SELECT order_num FROM orderitems WHERE prod_id ='RGAN01'
)
)
</code></pre><ul><li>子查询对于嵌套的层数没有限制</li><li>但是一般在使用的时候由于性能方面的考虑，不建议嵌套太多层</li><li>作为子查询的 SELECT 语句只能查询单个列，企图检索多个列会出问题。</li></ul><h4 id="102-作为计算字段使用子查询"><a class="anchor" href="#102-作为计算字段使用子查询">#</a> 10.2 作为计算字段使用子查询</h4><p>假如需要显示 Customers 表中每个顾客的订单总数，订单与相应顾客 ID 存储在 Orders 表中，一般的操作是：</p><ol><li>从 Customers 表中检索顾客列表</li><li>对于检索出的每个顾客 统计其在 Orders 表中的订单数目</li></ol><pre><code>SELECT cust_name,cust_state,(SELECT COUNT(*) FROM orders WHERE orders.cust_id=customers.cust_id) AS order_count FROM customers ORDER BY cust_id
</code></pre><ul><li>注： 对于在子查询中，有可能会出现两张表有相同字段名的情况，这时需要使用全限定名，即表名。列表名 = 表名。列表名</li></ul><h3 id="11-联接表"><a class="anchor" href="#11-联接表">#</a> 11、联接表</h3><p>我们所使用的关系型数据库讲数据分成多个表进行存储，但是数据存放在多个表中，我们如何使用一条 SQL 语句查询出来呢，然后就是使用联接，联接是一种机制，用来在一条 SQL 语句中关联表</p><h4 id="111等值连接"><a class="anchor" href="#111等值连接">#</a> 11.1 等值连接</h4><pre><code>SELECT vend_name,prod_name,prod_price FROM vendors,products WHERE vendors.vend_id=products.vend_id
</code></pre><ul><li>在连接表时最好使用全限定名，</li><li>WHERE 如果没有 WHERE 就会产生笛卡尔积</li></ul><h4 id="112内连接"><a class="anchor" href="#112内连接">#</a> 11.2 内连接</h4><p>其实就是对等值连接改一下语法</p><pre><code>SELECT vend_name,prod_name,prod_price FROM vendors INNER JOIN products ON vendors.vend_id=products.vend_id;
</code></pre><p>将两个表以 INNER JOIN 进行连接，ON 后接连接条件</p><h4 id="112-联接多个表"><a class="anchor" href="#112-联接多个表">#</a> 11.2 联接多个表</h4><p>SQL 中不限制连接的表的数量，但最好不要链接没有必要的表，会导致性能下降</p><pre><code>SELECT vend_name,prod_name,prod_price FROM
vendors,products,orderitems
WHERE products.vend_id=vendors.vend_id
and orderitems.prod_id=products.prod_id
and order_num=20007
SELECT vend_name,prod_name,prod_price FROM
(products INNER JOIN vendors ON products.vend_id=vendors.vend_id)
INNER JOIN orderitems ON orderitems.prod_id=products.prod_id 
WHERE order_num=20007
</code></pre><h3 id="12-高级联接与组合查询"><a class="anchor" href="#12-高级联接与组合查询">#</a> 12、高级联接与组合查询</h3><h4 id="自联结"><a class="anchor" href="#自联结">#</a> 自联结</h4><p>需求：需要给与摘星同一公司的使用顾客发一封信<br>这个查询需要先找出摘星得到公司，然后再根据公司去筛选， 很显然我们常规的解决方案是使用子查询</p><pre><code>SELECT cust_id,cust_name,cust_contact from customers where cust_name=(select cust_name from customers where cust_contact='Jim Jones')
</code></pre><p>然后使用自联接就是</p><pre><code>SELECT c1.cust_id,c1.cust_name,c1.cust_contact FROM customers as c1,customers as c2 where c1.cust_name=c2.cust_name and c2.cust_contact='Jim Jones'
</code></pre><p>需要注意：</p><ul><li>使用自联接是两张相同的表联接自己 需要给表加一个别名，以区分，不然 DBMS 会出错</li><li>自联接通常作为外部语句，用来替代从相同表中检索数据的使用子查询</li></ul><h4 id="自然联结"><a class="anchor" href="#自然联结">#</a> 自然联结</h4><p>无论何时在对表进行连接时，至少有一列，是不止出现在一个表中，标准的连接返回所有的数据，相同的列甚至多次出来，，自然连接排除多次出现</p><ul><li>自然连接要求我们只能选择哪些唯一的列，一般通过对一个表使用通配符 * 而对其他表的列明确的子集来完成。</li></ul><h4 id="外联结"><a class="anchor" href="#外联结">#</a> 外联结</h4><p>许多联结将一个表中的行与另一个表中的行相关联，但有时候需要包含没有关联行的哪些行<br>外连接分为左外连接和右边外连接</p><p>#### 使用带聚集函数的联结</p><p>使用聚集函数来汇总数据也是可以多个表一起汇总的</p><p>例如：检索所有顾客及每个顾客所下的订单数</p><pre><code>SELECT customers.cust_id,count(orders.order_num)as num_ord
from customers left outer join orders on customers.cust_id=orders.cust_id
GROUP BY customers.cust_id
</code></pre><hr><h4 id="注"><a class="anchor" href="#注">#</a> 注：</h4><ul><li>一定要提供联接条件，否则会产生笛卡尔积</li><li>要确保使用正确的联接条件，否则会产生不正确的值</li></ul><h3 id="13-组合查询"><a class="anchor" href="#13-组合查询">#</a> 13、组合查询</h3><div class="tags"><a href="/tags/SQL/" rel="tag"><i class="ic i-tag"></i> SQL</a> <a href="/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" rel="tag"><i class="ic i-tag"></i> 读书笔记</a> <a href="/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/" rel="tag"><i class="ic i-tag"></i> 数据库</a> <a href="/tags/%E5%91%BD%E4%BB%A4/" rel="tag"><i class="ic i-tag"></i> 命令</a></div></div><footer><div class="meta"><span class="item"><span class="icon"><i class="ic i-calendar-check"></i> </span><span class="text">更新于</span> <time title="修改时间：2023-02-09 22:39:54" itemprop="dateModified" datetime="2023-02-09T22:39:54+08:00">2023-02-09</time> </span><span id="/SQL必知必会读书笔记" class="item leancloud_visitors" data-flag-title="SQL必知必会读书笔记" title="阅读次数"><span class="icon"><i class="ic i-eye"></i> </span><span class="text">阅读次数</span> <span class="leancloud-visitors-count"></span> <span class="text">次</span></span></div><div class="reward"><button><i class="ic i-heartbeat"></i> 赞赏</button><p>请我喝[茶]~(￣▽￣)~*</p><div id="qr"><div><img data-src="/images/wechatpay.png" alt="摘星 微信支付"><p>微信支付</p></div><div><img data-src="/images/alipay.png" alt="摘星 支付宝"><p>支付宝</p></div><div><img data-src="/images/paypal.png" alt="摘星 贝宝"><p>贝宝</p></div></div></div><div id="copyright"><ul><li class="author"><strong>本文作者： </strong>摘星 <i class="ic i-at"><em>@</em></i>星辰驿站</li><li class="link"><strong>本文链接：</strong> <a href="http://dj_zhaixing.gitee.io/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0" title="SQL必知必会读书笔记">http://dj_zhaixing.gitee.io/SQL必知必会读书笔记</a></li><li class="license"><strong>版权声明： </strong>本站所有文章除特别声明外，均采用 <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo"><i class="ic i-creative-commons"><em>(CC)</em></i>BY-NC-SA</span> 许可协议。转载请注明出处！</li></ul></div></footer></article></div><div class="post-nav"><div class="item left"><a href="/%E5%9F%BA%E4%BA%8ESpringBoot%E6%95%B4%E5%90%88SpringSecurity%E7%9A%84%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83" itemprop="url" rel="prev" data-background-image="https:&#x2F;&#x2F;blog-1259743669.cos.ap-chengdu.myqcloud.com&#x2F;81d1da7e1ba142629967fea196c73e0e.jpg" title="基于SpringBoot整合SpringSecurity的认证授权"><span class="type">上一篇</span> <span class="category"><i class="ic i-flag"></i> java</span><h3>基于SpringBoot整合SpringSecurity的认证授权</h3></a></div><div class="item right"><a href="/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE" itemprop="url" rel="next" data-background-image="https:&#x2F;&#x2F;blog-1259743669.cos.ap-chengdu.myqcloud.com&#x2F;81d1da7e1ba142629967fea196c73e0e.jpg" title="二分查找"><span class="type">下一篇</span> <span class="category"><i class="ic i-flag"></i> 数据结构与算法</span><h3>二分查找</h3></a></div></div><div class="wrap" id="comments"></div></div><div id="sidebar"><div class="inner"><div class="panels"><div class="inner"><div class="contents panel pjax" data-title="文章目录"><ol class="toc"><li class="toc-item toc-level-3"><a class="toc-link" href="#1-%E4%BA%86%E8%A7%A3sql"><span class="toc-number">1.</span> <span class="toc-text">1、了解 SQL</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#2-%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE"><span class="toc-number">2.</span> <span class="toc-text">2、检索数据</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#21select%E8%AF%AD%E5%8F%A5"><span class="toc-number">2.1.</span> <span class="toc-text">2.1SELECT 语句</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#22-%E6%A3%80%E7%B4%A2%E5%8D%95%E4%B8%AA%E5%88%97"><span class="toc-number">2.2.</span> <span class="toc-text">2.2 检索单个列</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#23%E6%A3%80%E7%B4%A2%E5%A4%9A%E4%B8%AA%E5%88%97"><span class="toc-number">2.3.</span> <span class="toc-text">2.3 检索多个列</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#24%E6%A3%80%E7%B4%A2%E6%89%80%E6%9C%89%E5%88%97"><span class="toc-number">2.4.</span> <span class="toc-text">2.4 检索所有列</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#25-%E6%A3%80%E7%B4%A2%E4%B8%8D%E5%90%8C%E7%9A%84%E5%80%BC"><span class="toc-number">2.5.</span> <span class="toc-text">2.5、检索不同的值</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#26-%E9%99%90%E5%88%B6%E6%98%BE%E7%A4%BA%E7%BB%93%E6%9E%9C"><span class="toc-number">2.6.</span> <span class="toc-text">2.6、限制显示结果</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#3-%E6%8E%92%E5%BA%8F%E6%A3%80%E7%B4%A2%E6%95%B0%E6%8D%AE"><span class="toc-number">3.</span> <span class="toc-text">3、排序检索数据</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#31%E6%8E%92%E5%BA%8F%E6%95%B0%E6%8D%AE"><span class="toc-number">3.1.</span> <span class="toc-text">3.1 排序数据</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#32-%E6%8C%89%E5%A4%9A%E4%B8%AA%E5%88%97%E6%8E%92%E5%BA%8F"><span class="toc-number">3.2.</span> <span class="toc-text">3.2 按多个列排序</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#33-%E6%8C%87%E5%AE%9A%E6%8E%92%E5%BA%8F%E6%96%B9%E5%90%91"><span class="toc-number">3.3.</span> <span class="toc-text">3.3 指定排序方向</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#4-%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE"><span class="toc-number">4.</span> <span class="toc-text">4、过滤数据</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#41%E4%BD%BF%E7%94%A8where%E5%AD%90%E5%8F%A5"><span class="toc-number">4.1.</span> <span class="toc-text">4.1 使用 where 子句</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#42-where-%E5%AD%90%E5%8F%A5%E6%93%8D%E4%BD%9C%E7%AC%A6"><span class="toc-number">4.2.</span> <span class="toc-text">4.2 where 子句操作符</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#5-%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4"><span class="toc-number">5.</span> <span class="toc-text">5、高级数据过滤</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#51%E7%BB%84%E5%90%88where-%E5%AD%90%E5%8F%A5"><span class="toc-number">5.1.</span> <span class="toc-text">5.1 组合 WHERE 子句</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#52-in%E6%93%8D%E4%BD%9C%E7%AC%A6"><span class="toc-number">5.2.</span> <span class="toc-text">5.2 IN 操作符</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#53-not-%E6%93%8D%E4%BD%9C%E7%AC%A6"><span class="toc-number">5.3.</span> <span class="toc-text">5.3 NOT 操作符</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#6-%E4%BD%BF%E7%94%A8%E9%80%9A%E9%85%8D%E7%AC%A6%E8%BF%9B%E8%A1%8C%E8%BF%87%E6%BB%A4"><span class="toc-number">6.</span> <span class="toc-text">6、使用通配符进行过滤</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#7-%E5%88%9B%E5%BB%BA%E8%AE%A1%E7%AE%97%E5%AD%97%E6%AE%B5"><span class="toc-number">7.</span> <span class="toc-text">7、创建计算字段</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#71%E8%AE%A1%E7%AE%97%E5%AD%97%E6%AE%B5"><span class="toc-number">7.1.</span> <span class="toc-text">7.1 计算字段</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#72%E6%8B%BC%E6%8E%A5%E5%AD%97%E6%AE%B5"><span class="toc-number">7.2.</span> <span class="toc-text">7.2 拼接字段</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#8-%E6%B1%87%E6%80%BB%E6%95%B0%E6%8D%AE"><span class="toc-number">8.</span> <span class="toc-text">8、汇总数据</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#9-%E5%88%86%E7%BB%84%E6%95%B0%E6%8D%AE"><span class="toc-number">9.</span> <span class="toc-text">9、分组数据</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#91-%E8%BF%87%E6%BB%A4%E5%88%86%E7%BB%84"><span class="toc-number">9.1.</span> <span class="toc-text">9.1 过滤分组</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#92-select%E5%AD%90%E5%8F%A5%E9%A1%BA%E5%BA%8F"><span class="toc-number">9.2.</span> <span class="toc-text">9.2 SELECT 子句顺序</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#10-%E5%AD%90%E6%9F%A5%E8%AF%A2"><span class="toc-number">10.</span> <span class="toc-text">10、子查询</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#101%E5%88%A9%E7%94%A8%E5%AD%90%E6%9F%A5%E8%AF%A2%E8%BF%9B%E8%A1%8C%E8%BF%87%E6%BB%A4"><span class="toc-number">10.1.</span> <span class="toc-text">10.1 利用子查询进行过滤</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#102-%E4%BD%9C%E4%B8%BA%E8%AE%A1%E7%AE%97%E5%AD%97%E6%AE%B5%E4%BD%BF%E7%94%A8%E5%AD%90%E6%9F%A5%E8%AF%A2"><span class="toc-number">10.2.</span> <span class="toc-text">10.2 作为计算字段使用子查询</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#11-%E8%81%94%E6%8E%A5%E8%A1%A8"><span class="toc-number">11.</span> <span class="toc-text">11、联接表</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#111%E7%AD%89%E5%80%BC%E8%BF%9E%E6%8E%A5"><span class="toc-number">11.1.</span> <span class="toc-text">11.1 等值连接</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#112%E5%86%85%E8%BF%9E%E6%8E%A5"><span class="toc-number">11.2.</span> <span class="toc-text">11.2 内连接</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#112-%E8%81%94%E6%8E%A5%E5%A4%9A%E4%B8%AA%E8%A1%A8"><span class="toc-number">11.3.</span> <span class="toc-text">11.2 联接多个表</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#12-%E9%AB%98%E7%BA%A7%E8%81%94%E6%8E%A5%E4%B8%8E%E7%BB%84%E5%90%88%E6%9F%A5%E8%AF%A2"><span class="toc-number">12.</span> <span class="toc-text">12、高级联接与组合查询</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%87%AA%E8%81%94%E7%BB%93"><span class="toc-number">12.1.</span> <span class="toc-text">自联结</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%87%AA%E7%84%B6%E8%81%94%E7%BB%93"><span class="toc-number">12.2.</span> <span class="toc-text">自然联结</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%A4%96%E8%81%94%E7%BB%93"><span class="toc-number">12.3.</span> <span class="toc-text">外联结</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%B3%A8"><span class="toc-number">12.4.</span> <span class="toc-text">注：</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#13-%E7%BB%84%E5%90%88%E6%9F%A5%E8%AF%A2"><span class="toc-number">13.</span> <span class="toc-text">13、组合查询</span></a></li></ol></div><div class="related panel pjax" data-title="系列文章"><ul><li class="active"><a href="/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0" rel="bookmark" title="SQL必知必会读书笔记">SQL必知必会读书笔记</a></li></ul></div><div class="overview panel" data-title="站点概览"><div class="author" itemprop="author" itemscope itemtype="http://schema.org/Person"><img class="image" itemprop="image" alt="摘星" data-src="/images/avatar.jpg"><p class="name" itemprop="name">摘星</p><div class="description" itemprop="description">欢迎来到摘星的小破站，这里你可以阅读我的学习笔记并提出独到的见解~我们将互相学习交流知识，共同进步</div></div><nav class="state"><div class="item posts"><a href="/archives/"><span class="count">11</span> <span class="name">文章</span></a></div><div class="item categories"><a href="/categories/"><span class="count">14</span> <span class="name">分类</span></a></div><div class="item tags"><a href="/tags/"><span class="count">22</span> <span class="name">标签</span></a></div></nav><div class="social"></div><ul class="menu"><li class="item"><a href="/" rel="section"><i class="ic i-hemo"></i>主站</a></li><li class="item"><a href="/about/" rel="section"><i class="ic i-about"></i>关于我</a></li><li class="item"><a href="/categories/" rel="section"><i class="ic i-th"></i>分类</a></li><li class="item"><a href="/tags/" rel="section"><i class="ic i-tags"></i>标签</a></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-feather"></i>文章</a><ul class="submenu"><li class="item"><a href="/archives/" rel="section"><i class="ic i-list-alt"></i>归档</a></li></ul></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-feather"></i>链接</a><ul class="submenu"><li class="item"><a href="/friends/" rel="section"><i class="ic i-heart"></i>友链</a></li><li class="item"><a href="/links/" rel="section"><i class="ic i-magic"></i>项目链接</a></li></ul></li><li class="item"><a href="/guestbook/" rel="section"><i class="ic i-guestbook"></i>留言板</a></li></ul></div></div></div><ul id="quick"><li class="prev pjax"><a href="/%E5%9F%BA%E4%BA%8ESpringBoot%E6%95%B4%E5%90%88SpringSecurity%E7%9A%84%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83" rel="prev" title="上一篇"><i class="ic i-chevron-left"></i></a></li><li class="up"><i class="ic i-arrow-up"></i></li><li class="down"><i class="ic i-arrow-down"></i></li><li class="next pjax"><a href="/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE" rel="next" title="下一篇"><i class="ic i-chevron-right"></i></a></li><li class="percent"></li></ul></div></div><div class="dimmer"></div></div></main><footer id="footer"><div class="inner"><div class="widgets"><div class="rpost pjax"><h2>随机文章</h2><ul><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 java">java</a></div><span><a href="/%E5%9F%BA%E4%BA%8ESpringBoot%E6%95%B4%E5%90%88SpringSecurity%E7%9A%84%E8%AE%A4%E8%AF%81%E6%8E%88%E6%9D%83" title="基于SpringBoot整合SpringSecurity的认证授权">基于SpringBoot整合SpringSecurity的认证授权</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E5%AD%A6%E4%B9%A0/" title="分类于 代码随想录学习">代码随想录学习</a> <i class="ic i-angle-right"></i> <a href="/categories/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/" title="分类于 数据结构与算法">数据结构与算法</a></div><span><a href="/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE" title="二分查找">二分查找</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/Python/" title="分类于 Python">Python</a></div><span><a href="/Python%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4" title="Python自动化运维">Python自动化运维</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/Redis/" title="分类于 Redis">Redis</a></div><span><a href="/Redis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" title="Redis学习笔记">Redis学习笔记</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/%E5%89%91%E6%8C%87offer/" title="分类于 剑指offer">剑指offer</a> <i class="ic i-angle-right"></i> <a href="/categories/%E5%89%91%E6%8C%87offer/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/" title="分类于 数据结构与算法">数据结构与算法</a></div><span><a href="/%E6%9C%80%E5%B0%8F%E6%A0%88" title="最小栈">最小栈</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/MySQL/" title="分类于 MySQL">MySQL</a></div><span><a href="/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" title="MySQL学习笔记">MySQL学习笔记</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/" title="分类于 大数据">大数据</a></div><span><a href="/Hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0" title="Hadoop集群搭建笔记">Hadoop集群搭建笔记</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/MySQL/" title="分类于 MySQL">MySQL</a> <i class="ic i-angle-right"></i> <a href="/categories/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93/" title="分类于 数据库">数据库</a> <i class="ic i-angle-right"></i> <a href="/categories/MySQL/%E6%95%B0%E6%8D%AE%E5%BA%93/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/" title="分类于 读书笔记">读书笔记</a></div><span><a href="/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0" title="SQL必知必会读书笔记">SQL必知必会读书笔记</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 java">java</a> <i class="ic i-angle-right"></i> <a href="/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/" title="分类于 数据结构与算法">数据结构与算法</a></div><span><a href="/Java%E5%B8%B8%E7%94%A8%E5%AE%B9%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" title="Java常用容器学习笔记">Java常用容器学习笔记</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 java">java</a> <i class="ic i-angle-right"></i> <a href="/categories/%E5%BC%82%E6%AD%A5%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" title="分类于 异步设计模式">异步设计模式</a></div><span><a href="/JUC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0" title="JUC学习笔记">JUC学习笔记</a></span></li></ul></div><div><h2>最新评论</h2><ul class="leancloud-recent-comment"></ul></div></div><div class="status"><div class="copyright">&copy; 2010 – <span itemprop="copyrightYear">2024</span> <span class="with-love"><i class="ic i-sakura rotate"></i> </span><span class="author" itemprop="copyrightHolder">摘星 @ Pick stars</span></div><div class="count"><span class="post-meta-item-icon"><i class="ic i-chart-area"></i> </span><span title="站点总字数">67k 字</span> <span class="post-meta-divider">|</span> <span class="post-meta-item-icon"><i class="ic i-coffee"></i> </span><span title="站点阅读时长">1:01</span></div></div></div></footer></div><script data-config type="text/javascript">var LOCAL={path:"/SQL必知必会读书笔记",favicon:{show:"（●´3｀●）やれやれだぜ",hide:"(´Д｀)大変だ！"},search:{placeholder:"文章搜索",empty:"关于 「 ${query} 」，什么也没搜到",stats:"${time} ms 内找到 ${hits} 条结果"},valine:!0,fancybox:!0,copyright:'复制成功，转载请遵守 <i class="ic i-creative-commons"></i>BY-NC-SA 协议。',ignores:[function(e){return e.includes("#")},function(e){return new RegExp(LOCAL.path+"$").test(e)}]}</script><script src="https://cdn.polyfill.io/v2/polyfill.js"></script><script src="//cdn.jsdelivr.net/combine/npm/pace-js@1.0.2/pace.min.js,npm/pjax@0.2.8/pjax.min.js,npm/whatwg-fetch@3.4.0/dist/fetch.umd.min.js,npm/animejs@3.2.0/lib/anime.min.js,npm/algoliasearch@4/dist/algoliasearch-lite.umd.js,npm/instantsearch.js@4/dist/instantsearch.production.min.js,npm/lozad@1/dist/lozad.min.js,npm/quicklink@2/dist/quicklink.umd.js"></script><script src="/js/app.js?v=0.2.5"></script></body></html>